// <auto-generated />
using System;
using IndigoAssistMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndigoAssistMVC.Migrations
{
    [DbContext(typeof(IndigoDBContext))]
    partial class IndigoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IndigoAssistMVC.Models.Activo", b =>
                {
                    b.Property<int>("IdActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identificador único del activo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActivo"));

                    b.Property<int>("CodificacionComponentes")
                        .HasColumnType("int")
                        .HasComment("Codificación de componentes");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Código único del activo");

                    b.Property<decimal?>("CostoCompra")
                        .HasColumnType("decimal(12,2)")
                        .HasComment("Costo de compra del activo");

                    b.Property<DateTime>("FeAlta")
                        .HasColumnType("date")
                        .HasComment("Fecha de alta del activo");

                    b.Property<DateTime?>("FeBaja")
                        .HasColumnType("date")
                        .HasComment("Fecha de baja del activo");

                    b.Property<DateTime?>("FeCompra")
                        .HasColumnType("date")
                        .HasComment("Fecha de compra del activo");

                    b.Property<byte>("IdDepartamento")
                        .HasColumnType("tinyint")
                        .HasComment("Departamento");

                    b.Property<byte>("IdProveedor")
                        .HasColumnType("tinyint")
                        .HasComment("Proveedor");

                    b.Property<byte>("IdStatus")
                        .HasColumnType("tinyint")
                        .HasComment("Status del activo");

                    b.Property<byte>("IdTipoActivo")
                        .HasColumnType("tinyint")
                        .HasComment("Tipo de activo");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Marca del activo");

                    b.Property<string>("Modelo")
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("Modelo del activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(120)")
                        .HasComment("Nombre descriptivo del activo");

                    b.Property<string>("Notas")
                        .HasMaxLength(400)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(400)")
                        .HasComment("Notas adicionales sobre el activo");

                    b.Property<string>("PersonaAsign")
                        .HasMaxLength(120)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(120)")
                        .HasComment("Persona asignada al activo");

                    b.Property<string>("Serie")
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("Número de serie del activo");

                    b.Property<bool>("TieneSoftwareOP")
                        .HasColumnType("bit")
                        .HasComment("Indica si tiene software OP");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(120)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(120)")
                        .HasComment("Ubicación física del activo");

                    b.HasKey("IdActivo");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdTipoActivo");

                    b.ToTable("mActivos", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Componente", b =>
                {
                    b.Property<byte>("IdComponente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del componente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdComponente"));

                    b.Property<string>("ComponenteNombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Componente")
                        .HasComment("Nombre del componente");

                    b.Property<int?>("ValorBit")
                        .HasColumnType("int")
                        .HasComment("Valor bit para codificación");

                    b.HasKey("IdComponente");

                    b.ToTable("mComponentes", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Proveedor", b =>
                {
                    b.Property<byte>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdProveedor"));

                    b.Property<string>("ProveedorNombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Proveedor")
                        .HasComment("Nombre del proveedor");

                    b.HasKey("IdProveedor");

                    b.ToTable("mProveedores", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Software", b =>
                {
                    b.Property<byte>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del software");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdSoftware"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("Nombre del software");

                    b.HasKey("IdSoftware");

                    b.ToTable("mSoftware", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Status", b =>
                {
                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del status");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("StatusId"));

                    b.Property<string>("StatusNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status")
                        .HasComment("Nombre del status");

                    b.HasKey("StatusId");

                    b.ToTable("mStatus", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTicket"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeCompromiso")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IdSubCategoria")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IdTipoTicket")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Prioridad")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("IdTicket");

                    b.HasIndex("IdSubCategoria");

                    b.HasIndex("IdTipoTicket");

                    b.HasIndex("Prioridad");

                    b.HasIndex("Status");

                    b.HasIndex("Usuario");

                    b.ToTable("mTickets");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.TicketVista", b =>
                {
                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeCompromiso")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IdCategoria")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IdDepto")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IdPrioridad")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdSolicitante")
                        .HasColumnType("int");

                    b.Property<byte>("IdSubCategoria")
                        .HasColumnType("tinyint");

                    b.Property<int?>("IdTecnico")
                        .HasColumnType("int");

                    b.Property<int>("IdTicket")
                        .HasColumnType("int");

                    b.Property<byte?>("IdTipoTicket")
                        .HasColumnType("tinyint");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("StatusDes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tecnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("vTickets");

                    b.ToView("vTickets", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.TipoActivo", b =>
                {
                    b.Property<byte>("IdTipoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del tipo de activo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdTipoActivo"));

                    b.Property<string>("TipoActivoNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoActivo")
                        .HasComment("Nombre del tipo de activo");

                    b.HasKey("IdTipoActivo");

                    b.ToTable("mTiposActivo", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Indica si el usuario está activo");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("Fecha de registro del usuario");

                    b.Property<byte?>("IdDepartamento")
                        .HasColumnType("tinyint")
                        .HasComment("ID del departamento");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Nombre completo del usuario");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2")
                        .HasComment("Último acceso del usuario");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.dEmpleados", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<byte>("IdPuesto")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("IdPersona", "IdPuesto");

                    b.HasIndex("IdPuesto");

                    b.ToTable("dEmpleados", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.dTicketsTecnicos", b =>
                {
                    b.Property<int>("IdTicket")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdTicket", "IdPersona");

                    b.HasIndex("IdPersona");

                    b.ToTable("dTicketsTecnicos", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mCategoriasTicket", b =>
                {
                    b.Property<byte>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdCategoria"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("IdDepto")
                        .HasColumnType("tinyint");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdDepto");

                    b.ToTable("mCategoriasTicket", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mDepartamentos", b =>
                {
                    b.Property<byte>("IdDepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasComment("Identificador único del departamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdDepto"));

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Nombre del departamento");

                    b.Property<bool>("Tickets")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Indica si el departamento acepta tickets");

                    b.HasKey("IdDepto");

                    b.ToTable("mDepartamentos", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mEmpleados", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("IdPersona");

                    b.ToTable("mEmpleados", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mEmpresas", b =>
                {
                    b.Property<byte>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdEmpresa"));

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Persona")
                        .HasColumnType("int");

                    b.HasKey("IdEmpresa");

                    b.HasIndex("Persona");

                    b.ToTable("mEmpresas", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPerEmp", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<byte>("IdEmpresa")
                        .HasColumnType("tinyint");

                    b.Property<int>("Persona")
                        .HasColumnType("int");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("Persona");

                    b.ToTable("mPerEmp", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPersonas", b =>
                {
                    b.Property<int>("Persona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Persona"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FeModifica")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdReferencia")
                        .HasColumnType("int");

                    b.Property<byte?>("IdRegimenFiscal")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IdUsoCFDI")
                        .HasColumnType("tinyint");

                    b.Property<string>("Materno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Paterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Persona");

                    b.HasIndex("IdReferencia");

                    b.ToTable("mPersonas", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPrioridadTicket", b =>
                {
                    b.Property<byte>("IdPrioridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdPrioridad"));

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdPrioridad");

                    b.ToTable("mPrioridadTicket", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPuestos", b =>
                {
                    b.Property<byte>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdPuesto"));

                    b.Property<byte>("IdDepto")
                        .HasColumnType("tinyint");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPuesto");

                    b.HasIndex("IdDepto");

                    b.ToTable("mPuestos", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mStatusTicket", b =>
                {
                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Status"));

                    b.Property<string>("StatusDes")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Status");

                    b.ToTable("mStatusTicket", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mSubCategoriasTicket", b =>
                {
                    b.Property<byte>("IdSubCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdSubCategoria"));

                    b.Property<byte>("IdCategoria")
                        .HasColumnType("tinyint");

                    b.Property<string>("SubCategoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSubCategoria");

                    b.HasIndex("IdCategoria");

                    b.ToTable("mSubCategoriasTicket", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mTipoTicket", b =>
                {
                    b.Property<byte>("IdTipoTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdTipoTicket"));

                    b.Property<string>("TipoTicket")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTipoTicket");

                    b.ToTable("mTipoTicket", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Activo", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mDepartamentos", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.Proveedor", "Proveedor")
                        .WithMany("Activos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.Status", "Status")
                        .WithMany("Activos")
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.TipoActivo", "TipoActivo")
                        .WithMany("Activos")
                        .HasForeignKey("IdTipoActivo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Proveedor");

                    b.Navigation("Status");

                    b.Navigation("TipoActivo");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Ticket", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mSubCategoriasTicket", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("IdSubCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.mTipoTicket", "TipoTicket")
                        .WithMany()
                        .HasForeignKey("IdTipoTicket");

                    b.HasOne("IndigoAssistMVC.Models.mPrioridadTicket", "PrioridadTicket")
                        .WithMany()
                        .HasForeignKey("Prioridad");

                    b.HasOne("IndigoAssistMVC.Models.mStatusTicket", "Estado")
                        .WithMany()
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.mPerEmp", "UsuarioSolicitante")
                        .WithMany()
                        .HasForeignKey("Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("PrioridadTicket");

                    b.Navigation("SubCategoria");

                    b.Navigation("TipoTicket");

                    b.Navigation("UsuarioSolicitante");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Usuario", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mDepartamentos", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.dEmpleados", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mEmpleados", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.mPersonas", "PersonaNavigation")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.mPuestos", "Puesto")
                        .WithMany()
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("PersonaNavigation");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.dTicketsTecnicos", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mEmpleados", "Tecnico")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("IdTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tecnico");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mCategoriasTicket", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mDepartamentos", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mEmpleados", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mPerEmp", "PersonaEmpresa")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PersonaEmpresa");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mEmpresas", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mPersonas", "PersonaInfo")
                        .WithMany()
                        .HasForeignKey("Persona")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PersonaInfo");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPerEmp", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mEmpresas", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.mPersonas", "PersonaInfo")
                        .WithMany()
                        .HasForeignKey("Persona")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("PersonaInfo");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPersonas", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mPersonas", "ReferenciaNavigation")
                        .WithMany()
                        .HasForeignKey("IdReferencia")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ReferenciaNavigation");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mPuestos", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mDepartamentos", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.mSubCategoriasTicket", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.mCategoriasTicket", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoAssistMVC.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IndigoAssistMVC.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Proveedor", b =>
                {
                    b.Navigation("Activos");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.Status", b =>
                {
                    b.Navigation("Activos");
                });

            modelBuilder.Entity("IndigoAssistMVC.Models.TipoActivo", b =>
                {
                    b.Navigation("Activos");
                });
#pragma warning restore 612, 618
        }
    }
}
